{"version":3,"sources":["components/welcome.js","components/myForm.js","components/calculator.js","components/googleAd.js","components/home.js","components/results.js","components/invalidAge.js","App.js","serviceWorker.js","index.js"],"names":["welcome","className","calculator","type","id","placeholder","htmlFor","name","value","checked","onChange","this","doNothing","onClick","getResults","call","window","event","preventDefault","userAge","document","querySelector","genderRadio","getElementsByName","userGender","userDiseases","showError","props","calculateResult","showResults","history","push","Component","withRouter","diseasesRateMap","Diabetes","Crdivsc","console","log","localStorage","setItem","GoogleAd","Home","state","isFinished","results","safeZone","resultInPercent","getItem","adtnlAdvice","invalidAge","App","exact","path","render","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uQAEe,SAASA,IACpB,OACI,yBAAMC,UAAU,WACZ,qD,ICFNC,E,iLACQ,IAAD,OACL,OACI,0BAAMD,UAAU,WACZ,mCAEA,2BAAOE,KAAK,SAASC,GAAG,WAAWC,YAAY,MAE/C,sCAEA,6BAASJ,UAAU,UACf,2BAAOK,QAAQ,gBAAe,2BAAOH,KAAK,QAAQI,KAAK,SAASH,GAAG,eAAeI,MAAM,SAASC,SAAO,EAACC,SAAUC,KAAKC,YAAxH,UACA,2BAAON,QAAQ,cAAa,2BAAOH,KAAK,QAAQI,KAAK,SAASH,GAAG,aAAaI,MAAM,SAApF,SAGJ,iDAEA,4BAAQJ,GAAG,YACP,wCACA,4CACA,2DAGJ,4BAAQS,QAAS,kBAAM,EAAKC,WAAWC,KAAK,KAA5C,kB,mCAMRC,OAAOC,MAAMC,iBAEb,IAAIC,GAAWC,SAASC,cAAc,aAAab,MAC/Cc,EAAcF,SAASG,kBAAkB,UACzCC,EAAcF,EAAY,GAAGb,QAC7Ba,EAAY,GAAGd,MACfc,EAAY,GAAGd,MACfiB,EAAeL,SAASC,cAAc,aAAab,MAEnDW,EAAU,EACVR,KAAKe,UAAU,aAEff,KAAKgB,MAAMC,gBAAgBT,EAASK,EAAYC,GAChDd,KAAKkB,iB,gCAIH1B,GACO,aAATA,GACAQ,KAAKgB,MAAMG,QAAQC,KAAK,kB,oCAK5BpB,KAAKgB,MAAMG,QAAQC,KAAK,c,0CArDPC,aA2DVC,cAAW/B,GC3DLA,E,2MAiBjBgC,gBAAkB,CACdC,SAAU,KACVC,QAAS,M,wEAjBT,OACI,yBAAKnC,UAAU,cACX,kBAAC,EAAD,CAAQ2B,gBAAiBjB,KAAKiB,qB,sCAK1BT,EAASK,EAAYC,GACjCY,QAAQC,IAAI,WAAYnB,EAAS,cAAeK,EAAY,gBAAiBC,GAI7Ec,aAAaC,QAAQ,kBADC,Q,GAbUR,aCDnBS,E,iLAEb,OACI,yBAAKxC,UAAU,cAAf,iB,GAH0B+B,aCGjBU,E,YACjB,WAAYf,GAAQ,IAAD,8BACf,4CAAMA,KACDgB,MAAQ,CACTC,YAAY,GAHD,E,sEAQf,OACI,yBAAK3C,UAAU,gBACX,kBAAC,EAAD,MACA,6BAASA,UAAU,QACf,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAdc+B,aCHba,E,2MACjBC,SAAW,E,EACXC,gBAAkBR,aAAaS,QAAQ,mB,EACvCC,YAAe,EAAKF,gBAAkB,EAAKD,SACvC,4EACA,+D,wEAGA,OACI,2CACgBnC,KAAKoC,gBADrB,+BAEA,4BAAKpC,KAAKsC,kB,GAXejB,aCAhBkB,E,iLAEb,OACI,yBAAKjD,UAAU,eAAf,2F,GAH4B+B,aCInBmB,E,iLAEjB,OACE,yBAAKlD,UAAU,OACb,kBAAC,IAAD,KACE,wCACA,kBAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,SAC3C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,eAAeC,OAAQ,kBAAM,kBAAC,EAAD,SAC/C,8N,GATuBtB,aCMbuB,QACW,cAA7BvC,OAAOwC,SAASC,UAEe,UAA7BzC,OAAOwC,SAASC,UAEhBzC,OAAOwC,SAASC,SAASC,MACvB,2DCXNC,IAASL,OAAO,kBAAC,EAAD,MAASlC,SAASwC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,c","file":"static/js/main.2ded479a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function welcome() {\r\n    return (\r\n        <div  className=\"welcome\">\r\n            <h1>Welcome to Calcorona</h1>\r\n        </div>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass calculator extends Component {\r\n    render() {\r\n        return (\r\n            <form className=\"my-form\" >\r\n                <h3>Age</h3>\r\n\r\n                <input type=\"number\" id=\"ageInput\" placeholder=\"0\"></input>\r\n\r\n                <h3>Gender</h3>\r\n\r\n                <section className=\"gender\">\r\n                    <label htmlFor=\"genderFemale\"><input type=\"radio\" name=\"gender\" id=\"genderFemale\" value=\"female\" checked onChange={this.doNothing}></input>Female</label>\r\n                    <label htmlFor=\"genderMale\"><input type=\"radio\" name=\"gender\" id=\"genderMale\" value=\"male\"></input>Male</label>\r\n                </section>\r\n\r\n                <h3>Chronical Disease</h3>\r\n\r\n                <select id=\"diseases\">\r\n                    <option>None</option>\r\n                    <option>Diabetes</option>\r\n                    <option>Cardiovascular Disease</option>\r\n                </select>\r\n\r\n                <button onClick={() => this.getResults.call(this)}>Get results</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    getResults() {\r\n        window.event.preventDefault();\r\n\r\n        let userAge = +document.querySelector('#ageInput').value;\r\n        let genderRadio = document.getElementsByName('gender');\r\n        let userGender = (genderRadio[0].checked) ?\r\n            genderRadio[0].value :\r\n            genderRadio[1].value;\r\n        let userDiseases = document.querySelector('#diseases').value;\r\n\r\n        if (userAge < 5) {\r\n            this.showError('tooYoung');\r\n        } else {\r\n            this.props.calculateResult(userAge, userGender, userDiseases);\r\n            this.showResults();\r\n        }\r\n    }\r\n\r\n    showError(type) {\r\n        if (type === 'tooYoung') {\r\n            this.props.history.push(\"/invalid-age\");\r\n        }\r\n    }\r\n\r\n    showResults() {\r\n        this.props.history.push(\"/results\");\r\n    }\r\n\r\n    doNothing() { };\r\n};\r\n\r\nexport default withRouter(calculator);","import React, { Component } from 'react';\r\nimport MyForm from './myForm';\r\n\r\nexport default class calculator extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"calculator\">\r\n                <MyForm calculateResult={this.calculateResult}></MyForm>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    calculateResult(userAge, userGender, userDiseases) {\r\n        console.log('userAgr:', userAge, 'userGender:', userGender, 'userDiseases:', userDiseases);\r\n\r\n        // 20 is a temporary constant that will be changed into a calculated number.\r\n        let resultInPercent = 20;\r\n        localStorage.setItem('resultInPercent', resultInPercent);\r\n    }\r\n\r\n    diseasesRateMap = {\r\n        Diabetes: 0.092,\r\n        Crdivsc: 0.132\r\n    }\r\n};","import React, { Component } from 'react';\r\n\r\nexport default class GoogleAd extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"myGoogleAd\">\r\n                Google Ad\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Welcome from './welcome';\r\nimport Calculator from './calculator';\r\nimport GoogleAd from './googleAd'\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFinished: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home section\">\r\n                <Welcome></Welcome>\r\n                <section className=\"main\">\r\n                    <Calculator></Calculator>\r\n                    <GoogleAd></GoogleAd>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class results extends Component {\r\n    safeZone = 5;\r\n    resultInPercent = localStorage.getItem('resultInPercent');\r\n    adtnlAdvice = (this.resultInPercent < this.safeZone) ?\r\n        \"Be thoughtful of those who aren't so lucky to have a strong immune system\" :\r\n        \"Be careful and listen to your local authority's instructions\"\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                You Have a {this.resultInPercent}% chance of dying of Corona.\r\n            <h3>{this.adtnlAdvice}</h3>\r\n            </div>\r\n        )\r\n    }\r\n};","import React, { Component } from 'react';\r\n\r\nexport default class invalidAge extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"invalid-age\">\r\n                You can't be younger than 5. please enter your real age or go to a prodigy program.\r\n            </div>\r\n        );\r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from './components/home';\nimport Result from './components/results';\nimport InvalidAge from './components/invalidAge';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <header>logo</header>\n          <Route exact path=\"/\" render={() => <Home></Home>} />\n          <Route exact path=\"/results\" render={() => <Result></Result>} />\n          <Route exact path=\"/invalid-age\" render={() => <InvalidAge></InvalidAge>} />\n          <footer>\n            This site was created by Amit Fortus with the help of Roee Factor.\n            It is for fun only. Do not take any of it as medical advice. We are not responsible for any harmful outcome.\n            logo\n          </footer>\n        </Router>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// var sass = require('node-sass');\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}